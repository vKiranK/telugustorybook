{"version":3,"sources":["../../../src/internal-plugins/partytown/gatsby-ssr.tsx"],"names":["collectedScripts","Map","wrapRootElement","element","pathname","collectScript","newScript","currentCollectedScripts","get","push","set","onRenderBody","setHeadComponents","collectedScriptsOnPage","length","collectedForwards","flatMap","script","forward","delete"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AAEA,MAAMA,gBAAiD,GAAG,IAAIC,GAAJ,EAA1D;;AAEO,MAAMC,eAA6C,GAAG,CAAC;AAC5DC,EAAAA,OAD4D;AAE5DC,EAAAA;AAF4D,CAAD,kBAI3D,6BAAC,8BAAD,CAAkB,QAAlB;AACE,EAAA,KAAK,EAAE;AACLC,IAAAA,aAAa,EAAGC,SAAD,IAAkC;AAC/C,YAAMC,uBAAuB,GAAGP,gBAAgB,CAACQ,GAAjB,CAAqBJ,QAArB,KAAkC,EAAlE;AACAG,MAAAA,uBAAuB,CAACE,IAAxB,CAA6BH,SAA7B;AACAN,MAAAA,gBAAgB,CAACU,GAAjB,CAAqBN,QAArB,EAA+BG,uBAA/B;AACD;AALI;AADT,GASGJ,OATH,CAJK;;;;AAiBA,MAAMQ,YAAuC,GAAG,CAAC;AACtDP,EAAAA,QADsD;AAEtDQ,EAAAA;AAFsD,CAAD,KAGjD;AACJ,QAAMC,sBAAsB,GAAGb,gBAAgB,CAACQ,GAAjB,CAAqBJ,QAArB,CAA/B;;AAEA,MAAI,EAACS,sBAAD,aAACA,sBAAD,eAACA,sBAAsB,CAAEC,MAAzB,CAAJ,EAAqC;AACnC;AACD;;AAED,QAAMC,iBAAgC,GAAGF,sBAAH,aAAGA,sBAAH,uBAAGA,sBAAsB,CAAEG,OAAxB,CACtCC,MAAD,IAAyB,CAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEC,OAAR,KAAmB,EADL,CAAzC;AAIAN,EAAAA,iBAAiB,CAAC,cAAC,6BAAC,iBAAD;AAAW,IAAA,GAAG,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAEG;AAApC,IAAD,CAAD,CAAjB;AAEAf,EAAAA,gBAAgB,CAACmB,MAAjB,CAAwBf,QAAxB;AACD,CAjBM","sourcesContent":["import React from \"react\"\nimport type { GatsbySSR } from \"gatsby\"\nimport { Partytown } from \"@builder.io/partytown/react\"\nimport { PartytownContext, ScriptProps } from \"gatsby-script\"\n\nconst collectedScripts: Map<string, Array<ScriptProps>> = new Map()\n\nexport const wrapRootElement: GatsbySSR[`wrapRootElement`] = ({\n  element,\n  pathname,\n}) => (\n  <PartytownContext.Provider\n    value={{\n      collectScript: (newScript: ScriptProps): void => {\n        const currentCollectedScripts = collectedScripts.get(pathname) || []\n        currentCollectedScripts.push(newScript)\n        collectedScripts.set(pathname, currentCollectedScripts)\n      },\n    }}\n  >\n    {element}\n  </PartytownContext.Provider>\n)\n\nexport const onRenderBody: GatsbySSR[`onRenderBody`] = ({\n  pathname,\n  setHeadComponents,\n}) => {\n  const collectedScriptsOnPage = collectedScripts.get(pathname)\n\n  if (!collectedScriptsOnPage?.length) {\n    return\n  }\n\n  const collectedForwards: Array<string> = collectedScriptsOnPage?.flatMap(\n    (script: ScriptProps) => script?.forward || []\n  )\n\n  setHeadComponents([<Partytown key=\"partytown\" forward={collectedForwards} />])\n\n  collectedScripts.delete(pathname)\n}\n"],"file":"gatsby-ssr.js"}