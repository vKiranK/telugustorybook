{"version":3,"sources":["../../../src/internal-plugins/partytown/gatsby-browser.tsx"],"names":["PartytownProvider","children","collectedForwards","collectedAnyScript","setState","Set","collectScript","newScript","stateShouldChange","potentialNewState","forward","Array","isArray","singleForward","has","add","process","env","NODE_ENV","console","log","from","wrapRootElement","element"],"mappings":";;;;;AAAA;;AAEA;;AACA;;;;;;AAOA,SAASA,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAAuD;AACrD,QAAM,CAAC;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,GAAD,EAA4CC,QAA5C,IACJ,qBAAkC;AAChCF,IAAAA,iBAAiB,EAAE,IAAIG,GAAJ,EADa;AAEhCF,IAAAA,kBAAkB,EAAE;AAFY,GAAlC,CADF;AAMA,sBACE,6BAAC,8BAAD,CAAkB,QAAlB;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,aAAa,EAAGC,SAAD,IAAkC;AAC/C,YAAIC,iBAAiB,GAAG,KAAxB;AACA,cAAMC,iBAAiB,GAAG;AACxBN,UAAAA,kBADwB;AAExBD,UAAAA;AAFwB,SAA1B;;AAKA,YAAI,CAACC,kBAAL,EAAyB;AACvBM,UAAAA,iBAAiB,CAACN,kBAAlB,GAAuC,IAAvC;AACAK,UAAAA,iBAAiB,GAAG,IAApB;AACD;;AAED,YAAID,SAAJ,aAAIA,SAAJ,eAAIA,SAAS,CAAEG,OAAf,EAAwB;AACtB,cAAIC,KAAK,CAACC,OAAN,CAAcL,SAAS,CAACG,OAAxB,CAAJ,EAAsC;AACpC,iBAAK,MAAMG,aAAX,IAA4BN,SAAS,CAACG,OAAtC,EAA+C;AAC7C,kBAAI,CAACD,iBAAiB,CAACP,iBAAlB,CAAoCY,GAApC,CAAwCD,aAAxC,CAAL,EAA6D;AAC3DJ,gBAAAA,iBAAiB,CAACP,iBAAlB,CAAoCa,GAApC,CAAwCF,aAAxC;AACAL,gBAAAA,iBAAiB,GAAG,IAApB;AACD;AACF;AACF,WAPD,MAOO;AACL,gBAAIQ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAA0B,aAA9B,EAA4C;AAC1CC,cAAAA,OAAO,CAACC,GAAR,CAAa,6BAAb,EAA2Cb,SAA3C;AACD;AACF;AACF;;AAED,YAAIC,iBAAJ,EAAuB;AACrBJ,UAAAA,QAAQ,CAACK,iBAAD,CAAR;AACD;AACF;AA/BI;AADT,KAmCGR,QAnCH,EAoCGE,kBAAkB,iBACjB,6BAAC,iBAAD;AAAW,IAAA,GAAG,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAEQ,KAAK,CAACU,IAAN,CAAWnB,iBAAX;AAApC,IArCJ,CADF;AA0CD;;AAEM,MAAMoB,eAA6C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBAC3D,6BAAC,iBAAD,QAAoBA,OAApB,CADK","sourcesContent":["import React, { ReactElement, useState } from \"react\"\nimport type { GatsbySSR } from \"gatsby\"\nimport { Partytown } from \"@builder.io/partytown/react\"\nimport { PartytownContext, ScriptProps } from \"gatsby-script\"\n\ninterface ICollectedForwardsState {\n  collectedForwards: Set<string>\n  collectedAnyScript: boolean\n}\n\nfunction PartytownProvider({ children }): ReactElement {\n  const [{ collectedForwards, collectedAnyScript }, setState] =\n    useState<ICollectedForwardsState>({\n      collectedForwards: new Set(),\n      collectedAnyScript: false,\n    })\n\n  return (\n    <PartytownContext.Provider\n      value={{\n        collectScript: (newScript: ScriptProps): void => {\n          let stateShouldChange = false\n          const potentialNewState = {\n            collectedAnyScript,\n            collectedForwards,\n          }\n\n          if (!collectedAnyScript) {\n            potentialNewState.collectedAnyScript = true\n            stateShouldChange = true\n          }\n\n          if (newScript?.forward) {\n            if (Array.isArray(newScript.forward)) {\n              for (const singleForward of newScript.forward) {\n                if (!potentialNewState.collectedForwards.has(singleForward)) {\n                  potentialNewState.collectedForwards.add(singleForward)\n                  stateShouldChange = true\n                }\n              }\n            } else {\n              if (process.env.NODE_ENV === `development`) {\n                console.log(`unexpected shape of forward`, newScript)\n              }\n            }\n          }\n\n          if (stateShouldChange) {\n            setState(potentialNewState)\n          }\n        },\n      }}\n    >\n      {children}\n      {collectedAnyScript && (\n        <Partytown key=\"partytown\" forward={Array.from(collectedForwards)} />\n      )}\n    </PartytownContext.Provider>\n  )\n}\n\nexport const wrapRootElement: GatsbySSR[`wrapRootElement`] = ({ element }) => (\n  <PartytownProvider>{element}</PartytownProvider>\n)\n"],"file":"gatsby-browser.js"}